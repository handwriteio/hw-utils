module.exports=function(a){var e={};function r(n){if(e[n])return e[n].exports;var t=e[n]={i:n,l:!1,exports:{}};return a[n].call(t.exports,t,t.exports,r),t.l=!0,t.exports}return r.m=a,r.c=e,r.d=function(a,e,n){r.o(a,e)||Object.defineProperty(a,e,{enumerable:!0,get:n})},r.r=function(a){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(a,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(a,"__esModule",{value:!0})},r.t=function(a,e){if(1&e&&(a=r(a)),8&e)return a;if(4&e&&"object"==typeof a&&a&&a.__esModule)return a;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:a}),2&e&&"string"!=typeof a)for(var t in a)r.d(n,t,function(e){return a[e]}.bind(null,t));return n},r.n=function(a){var e=a&&a.__esModule?function(){return a.default}:function(){return a};return r.d(e,"a",e),e},r.o=function(a,e){return Object.prototype.hasOwnProperty.call(a,e)},r.p="",r(r.s=0)}([function(a,e,r){"use strict";r.r(e);var n={};r.r(n),r.d(n,"INVALID_CHARACTERS",(function(){return s})),r.d(n,"MAX_LINE_BREAKS",(function(){return i})),r.d(n,"MAX_CHARS",(function(){return o})),r.d(n,"VALID_MERGE_VARS",(function(){return u})),r.d(n,"US_STATES",(function(){return l}));var t={};r.r(t),r.d(t,"usesInvalidCharacters",(function(){return b})),r.d(t,"stateAbbr",(function(){return c})),r.d(t,"validateMergeVars",(function(){return g})),r.d(t,"validateContactInfo",(function(){return m})),r.d(t,"interpolate",(function(){return d}));const s="[~`©™_|^®]",i=5,o=320,u=["{firstName}","{lastName}","{city}","{state}","{company}"],l=[{name:"Alabama",slug:"alabama",abbr:"AL"},{name:"Alaska",slug:"alaska",abbr:"AK"},{name:"Arizona",slug:"arizona",abbr:"AZ"},{name:"Arkansas",slug:"arkansas",abbr:"AR"},{name:"California",slug:"california",abbr:"CA"},{name:"Colorado",slug:"colorado",abbr:"CO"},{name:"Connecticut",slug:"connecticut",abbr:"CT"},{name:"Delaware",slug:"delaware",abbr:"DE"},{name:"District of Columbia",slug:"district-of-columbia",abbr:"DC"},{name:"Florida",slug:"florida",abbr:"FL"},{name:"Georgia",slug:"georgia",abbr:"GA"},{name:"Hawaii",slug:"hawaii",abbr:"HI"},{name:"Idaho",slug:"idaho",abbr:"ID"},{name:"Illinois",slug:"illinois",abbr:"IL"},{name:"Indiana",slug:"indiana",abbr:"IN"},{name:"Iowa",slug:"iowa",abbr:"IA"},{name:"Kansas",slug:"kansas",abbr:"KS"},{name:"Kentucky",slug:"kentucky",abbr:"KY"},{name:"Louisiana",slug:"louisiana",abbr:"LA"},{name:"Maine",slug:"maine",abbr:"ME"},{name:"Maryland",slug:"maryland",abbr:"MD"},{name:"Massachusetts",slug:"massachusetts",abbr:"MA"},{name:"Michigan",slug:"michigan",abbr:"MI"},{name:"Minnesota",slug:"minnesota",abbr:"MN"},{name:"Mississippi",slug:"mississippi",abbr:"MS"},{name:"Missouri",slug:"missouri",abbr:"MO"},{name:"Montana",slug:"montana",abbr:"MT"},{name:"Nebraska",slug:"nebraska",abbr:"NE"},{name:"Nevada",slug:"nevada",abbr:"NV"},{name:"New Hampshire",slug:"new-hampshire",abbr:"NH"},{name:"New Jersey",slug:"new-jersey",abbr:"NJ"},{name:"New Mexico",slug:"new-mexico",abbr:"NM"},{name:"New York",slug:"new-york",abbr:"NY"},{name:"North Carolina",slug:"north-carolina",abbr:"NC"},{name:"North Dakota",slug:"north-dakota",abbr:"ND"},{name:"Ohio",slug:"ohio",abbr:"OH"},{name:"Oklahoma",slug:"oklahoma",abbr:"OK"},{name:"Oregon",slug:"oregon",abbr:"OR"},{name:"Pennsylvania",slug:"pennsylvania",abbr:"PA"},{name:"Puerto Rico",slug:"puerto-rico",abbr:"PR"},{name:"Rhode Island",slug:"rhode-island",abbr:"RI"},{name:"South Carolina",slug:"south-carolina",abbr:"SC"},{name:"South Dakota",slug:"south-dakota",abbr:"SD"},{name:"Tennessee",slug:"tennessee",abbr:"TN"},{name:"Texas",slug:"texas",abbr:"TX"},{name:"Utah",slug:"utah",abbr:"UT"},{name:"Vermont",slug:"vermont",abbr:"VT"},{name:"Virgin Islands",slug:"virgin-islands",abbr:"VI"},{name:"Virginia",slug:"virginia",abbr:"VA"},{name:"Washington",slug:"washington",abbr:"WA"},{name:"West Virginia",slug:"west-virginia",abbr:"WV"},{name:"Wisconsin",slug:"wisconsin",abbr:"WI"},{name:"Wyoming",slug:"wyoming",abbr:"WY"}],b=a=>new RegExp(s,"g").test(a),c=a=>{const e=l.find(e=>e.name===a);return e?e.abbr.toUpperCase():""},g=a=>{const e=a.match(/(\{.+?\})/gm);let r=[];return e?(e.forEach(a=>{constants.VALID_MERGE_VARS.includes(a)||r.push(a)}),r):r},m=(a={})=>{let e=[];if(a.street1||a.firstName||e.push({identifier:"Contact",errorMsg:"does not contain a street address"}),["street1","city","state","zip"].forEach(r=>{a[r]||e.push({identifier:r,errorMsg:"is required for creating a contact"})}),["firstName","lastName","street1","street2","city","state","zip","company"].forEach(r=>{a[r]&&b(a[r])&&e.push({identifier:r,errorMsg:`uses one of the following invalid characters ${s}`})}),["firstName","lastName","street1","street2","city","state"].forEach(e=>{a[e]=function(a=""){return a.replace(/\w\S*/g,(function(a){return a.charAt(0).toUpperCase()+a.substr(1).toLowerCase()}))}(a[e])}),[["firstName",17],["lastName",17],["company",26]].forEach(r=>{const n=(a[r[0]]||"").length||0,t=r[1];n>t&&e.push({identifier:r[0],errorMsg:`cannot be more than ${t} characters`})}),a.state)if(2===a.state.length){const r=l.find(e=>e.abbr.toLowerCase()===a.state.toLowerCase());r?a.state=r.abbr:e.push({identifier:a.state,errorMsg:"is not a valid state abbreviation"})}else{const r=c(a.state);r?a.state=r:e.push({identifier:a.state,errorMsg:"is not a valid state name"})}return["street1","street2"].forEach(e=>{a[e]&&(a[e]=a[e].replace(/[Nn]orthwest/g,"NW").replace(/[Ss]outhwest/g,"SW").replace(/[Ss]outheast/g,"SE").replace(/[Nn]ortheast/g,"NE").replace(/[Ss]treet/g,"St").replace(/[Aa]venue/g,"Ave").replace(/[Bb]oulevard/g,"Blvd"))}),a.zip&&5!==a.zip.length&&e.push({identifier:"Zip code",errorMsg:"must be exactly 5 digits"}),{contact:a,errors:e}},d=(a,e)=>a.replace(/{([^{}]*)}/g,(a,r)=>{var n=e[r];return"string"==typeof n||"number"==typeof n?n:a});r.d(e,"utils",(function(){return t})),r.d(e,"constants",(function(){return n}))}]);